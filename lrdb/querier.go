// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package lrdb

import (
	"context"

	"github.com/google/uuid"
)

type Querier interface {
	BatchDeleteMetricSegs(ctx context.Context, arg []BatchDeleteMetricSegsParams) *BatchDeleteMetricSegsBatchResults
	BatchInsertMetricSegs(ctx context.Context, arg []BatchInsertMetricSegsParams) *BatchInsertMetricSegsBatchResults
	BatchMarkMetricSegsRolledup(ctx context.Context, arg []BatchMarkMetricSegsRolledupParams) *BatchMarkMetricSegsRolledupBatchResults
	ClaimInqueueWork(ctx context.Context, arg ClaimInqueueWorkParams) (Inqueue, error)
	CleanupInqueueWork(ctx context.Context) error
	CompactLogSegments(ctx context.Context, arg CompactLogSegmentsParams) error
	DeleteInqueueWork(ctx context.Context, arg DeleteInqueueWorkParams) error
	GetLogSegmentsForCompaction(ctx context.Context, arg GetLogSegmentsForCompactionParams) ([]GetLogSegmentsForCompactionRow, error)
	GetMetricSegs(ctx context.Context, arg GetMetricSegsParams) ([]MetricSeg, error)
	InqueueJournalDelete(ctx context.Context, arg InqueueJournalDeleteParams) error
	InqueueJournalUpsert(ctx context.Context, arg InqueueJournalUpsertParams) (bool, error)
	InsertLogSegmentDirect(ctx context.Context, arg InsertLogSegmentParams) error
	InsertMetricSegmentDirect(ctx context.Context, arg InsertMetricSegmentParams) error
	ListSegmentsForQuery(ctx context.Context, arg ListSegmentsForQueryParams) ([]ListSegmentsForQueryRow, error)
	// Returns an estimate of the number of log segments, average bytes, average records,
	// and average bytes per record for log segments in the last hour per organization and instance.
	// This query is basically identical to the MetricSegEstimator, but for log segments.
	LogSegEstimator(ctx context.Context, arg LogSegEstimatorParams) ([]LogSegEstimatorRow, error)
	// Returns an estimate of the number of metric segments, average bytes, average records,
	// and average bytes per record for metric segments in the last hour per organization and instance.
	// This query is basically identical to the LogSegEstimator, but for metric segments.
	MetricSegEstimator(ctx context.Context, arg MetricSegEstimatorParams) ([]MetricSegEstimatorRow, error)
	ObjectCleanupAdd(ctx context.Context, arg ObjectCleanupAddParams) error
	ObjectCleanupComplete(ctx context.Context, id uuid.UUID) error
	ObjectCleanupFail(ctx context.Context, id uuid.UUID) error
	ObjectCleanupGet(ctx context.Context, maxrows int32) ([]ObjectCleanupGetRow, error)
	PutInqueueWork(ctx context.Context, arg PutInqueueWorkParams) error
	ReleaseInqueueWork(ctx context.Context, arg ReleaseInqueueWorkParams) error
	SignalLockCleanup(ctx context.Context) (int32, error)
	TouchInqueueWork(ctx context.Context, arg TouchInqueueWorkParams) error
	WorkQueueAddDirect(ctx context.Context, arg WorkQueueAddParams) error
	WorkQueueClaimDirect(ctx context.Context, arg WorkQueueClaimParams) (WorkQueueClaimRow, error)
	WorkQueueCleanupDirect(ctx context.Context) ([]WorkQueueCleanupRow, error)
	WorkQueueCompleteDirect(ctx context.Context, arg WorkQueueCompleteParams) error
	WorkQueueFailDirect(ctx context.Context, arg WorkQueueFailParams) error
	WorkQueueGC(ctx context.Context, arg WorkQueueGCParams) (int32, error)
	WorkQueueGlobalLock(ctx context.Context) error
	// 1) heart-beat the work_queue
	WorkQueueHeartbeatDirect(ctx context.Context, arg WorkQueueHeartbeatParams) error
}

var _ Querier = (*Queries)(nil)
