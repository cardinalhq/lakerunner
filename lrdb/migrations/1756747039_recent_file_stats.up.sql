-- 1756747039_recent_file_stats.up.sql

-- Code generated by database migration. DO NOT EDIT.

CREATE OR REPLACE FUNCTION lr_recent_file_stats(
    p_org_id uuid DEFAULT '65928f26-224b-4acb-8e57-9ee628164694',
    p_lookback_hours int DEFAULT 4
)
RETURNS TABLE (
    created_by text,
    organization_id uuid,
    dateint int,
    hour int,
    c_10s bigint,
    afs_10s bigint,
    c_60s bigint,
    afs_60s bigint,
    c_5m bigint,
    afs_5m bigint,
    c_20m bigint,
    afs_20m bigint,
    c_60m bigint,
    afs_60m bigint
)
LANGUAGE sql
AS $$
WITH params AS (
  SELECT p_org_id AS org_id,
         p_lookback_hours AS lookback_hours,
         NOW() AS now_ts
),
recent AS (
  SELECT *
  FROM metric_seg m
  JOIN params p ON TRUE
  WHERE m.published = TRUE
    AND m.organization_id = p.org_id
    AND m.dateint IN (
          to_char(p.now_ts::date, 'YYYYMMDD')::int,
          to_char((p.now_ts - interval '1 day')::date, 'YYYYMMDD')::int
        )
    AND to_timestamp(lower(m.ts_range) / 1000.0) >= p.now_ts - (p.lookback_hours || ' hours')::interval
)
SELECT
  CASE created_by
    WHEN 1 THEN 'ingest'
    WHEN 2 THEN 'compact'
    WHEN 3 THEN 'rollup'
    ELSE created_by::text
  END AS created_by,
  organization_id,
  dateint,
  EXTRACT(HOUR FROM to_timestamp(lower(ts_range) / 1000.0))::int AS hour,

  COUNT(*) FILTER (WHERE frequency_ms = 10000)                          AS c_10s,
  ROUND(AVG(file_size) FILTER (WHERE frequency_ms = 10000))::bigint     AS afs_10s,

  COUNT(*) FILTER (WHERE frequency_ms = 60000)                          AS c_60s,
  ROUND(AVG(file_size) FILTER (WHERE frequency_ms = 60000))::bigint     AS afs_60s,

  COUNT(*) FILTER (WHERE frequency_ms = 300000)                         AS c_5m,
  ROUND(AVG(file_size) FILTER (WHERE frequency_ms = 300000))::bigint    AS afs_5m,

  COUNT(*) FILTER (WHERE frequency_ms = 1200000)                        AS c_20m,
  ROUND(AVG(file_size) FILTER (WHERE frequency_ms = 1200000))::bigint   AS afs_20m,

  COUNT(*) FILTER (WHERE frequency_ms = 3600000)                        AS c_60m,
  ROUND(AVG(file_size) FILTER (WHERE frequency_ms = 3600000))::bigint   AS afs_60m

FROM recent
GROUP BY
  organization_id,
  created_by,
  dateint,
  EXTRACT(HOUR FROM to_timestamp(lower(ts_range) / 1000.0))::int
ORDER BY
  created_by,
  organization_id,
  dateint,
  hour;
$$;
