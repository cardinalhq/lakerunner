// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: mrq_cleanup.sql

package lrdb

import (
	"context"
)

const cleanupMetricRollupWork = `-- name: CleanupMetricRollupWork :one
WITH deleted AS (
  DELETE FROM metric_rollup_queue
  WHERE claimed_at IS NOT NULL
    AND heartbeated_at < (now() - make_interval(secs => $1))
  RETURNING 1
)
SELECT COUNT(*) FROM deleted
`

func (q *Queries) CleanupMetricRollupWork(ctx context.Context, timeoutSeconds float64) (int64, error) {
	row := q.db.QueryRow(ctx, cleanupMetricRollupWork, timeoutSeconds)
	var count int64
	err := row.Scan(&count)
	return count, err
}
