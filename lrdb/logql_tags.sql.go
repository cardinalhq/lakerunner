// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: logql_tags.sql

package lrdb

import (
	"context"

	"github.com/google/uuid"
)

const listLogQLTags = `-- name: ListLogQLTags :many
SELECT DISTINCT key::text AS tag_key
FROM lrdb_exemplar_logs,
     LATERAL jsonb_object_keys(exemplar) AS key
WHERE organization_id = $1
  AND key ~ '^(chq_|resource_|scope_|log_|attr_)'
ORDER BY tag_key
`

// Extract tag keys from flat exemplar format
// Only return keys that start with chq_, resource_, scope_, log_, or attr_
func (q *Queries) ListLogQLTags(ctx context.Context, organizationID uuid.UUID) ([]string, error) {
	rows, err := q.db.Query(ctx, listLogQLTags, organizationID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []string
	for rows.Next() {
		var tag_key string
		if err := rows.Scan(&tag_key); err != nil {
			return nil, err
		}
		items = append(items, tag_key)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
