// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: span_tags.sql

package lrdb

import (
	"context"

	"github.com/google/uuid"
)

const listSpanTags = `-- name: ListSpanTags :many
SELECT DISTINCT key::text AS tag_key
FROM trace_seg,
     LATERAL jsonb_object_keys(label_name_map) AS key
WHERE organization_id = $1
  AND label_name_map IS NOT NULL
ORDER BY tag_key
`

// Extract tag keys from label_name_map in trace_seg table
// Returns all keys from label_name_map (for v2 APIs)
// Handler code can filter by non-empty values for v1 legacy API support
func (q *Queries) ListSpanTags(ctx context.Context, organizationID uuid.UUID) ([]string, error) {
	rows, err := q.db.Query(ctx, listSpanTags, organizationID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []string
	for rows.Next() {
		var tag_key string
		if err := rows.Scan(&tag_key); err != nil {
			return nil, err
		}
		items = append(items, tag_key)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
