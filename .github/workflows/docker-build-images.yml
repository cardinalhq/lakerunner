name: Docker Image CI

on:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+*

jobs:
  build:
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest

    steps:
    - name: Check out repo
      uses: actions/checkout@v4
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      id: buildx
    - name: Inspect builder
      run: |
          echo "Name:      ${{ steps.buildx.outputs.name }}"
          echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
          echo "Status:    ${{ steps.buildx.outputs.status }}"
          echo "Flags:     ${{ steps.buildx.outputs.flags }}"
          echo "Platforms: ${{ steps.buildx.outputs.platforms }}"
    - id: "auth"
      uses: "google-github-actions/auth@v2"
      with:
        workload_identity_provider: "projects/859860501229/locations/global/workloadIdentityPools/github/providers/github-repo"
        project_id: profound-ship-384422
        service_account: github-actions-service-account@profound-ship-384422.iam.gserviceaccount.com
        token_format: access_token
    # - name: "Set up Cloud SDK"
    #   uses: "google-github-actions/setup-gcloud@v2"
    # - name: "Use gcloud CLI"
    #   run: |-
    #     gcloud info
    #     gcloud auth list
    #     gcloud auth configure-docker us-central1-docker.pkg.dev --quiet
    #     docker login us-central1-docker.pkg.dev
    - name: Log into GitHub Artifact Registry
      uses: docker/login-action@v3
      with:
        registry: us-central1-docker.pkg.dev
        username: oauth2accesstoken
        password: ${{ steps.auth.outputs.access_token }}
    - name: Build the Docker image
      id: dockerbuild
      run: make clean images image-names
#    - name: Send custom JSON data to Slack workflow
#      id: slack
#      uses: slackapi/slack-github-action@v1.25.0
#      env:
#        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_BUILD_EVENTS_WEBHOOK_URL }}
#      with:
#        payload: |
#          {
#            "imageNames": "${{ steps.dockerbuild.outputs.imageNames }}",
#            "actor": "${{ github.actor }}",
#            "status": "${{ job.status }}"
#          }
