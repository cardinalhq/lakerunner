// Copyright (C) 2025 CardinalHQ, Inc
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as
// published by the Free Software Foundation, version 3.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program. If not, see <http://www.gnu.org/licenses/>.

syntax = "proto3";

package adminproto;

import "google/protobuf/wrappers.proto";

option go_package = "github.com/cardinalhq/lakerunner/adminproto";

service AdminService {
  // Ping endpoint for connectivity testing
  rpc Ping(PingRequest) returns (PingResponse);


  // Get inqueue status/summary
  rpc InQueueStatus(InQueueStatusRequest) returns (InQueueStatusResponse);

  // List organizations in the system
  rpc ListOrganizations(ListOrganizationsRequest) returns (ListOrganizationsResponse);

  // Create a new organization
  rpc CreateOrganization(CreateOrganizationRequest) returns (CreateOrganizationResponse);

  // Update fields on an existing organization
  rpc UpdateOrganization(UpdateOrganizationRequest) returns (UpdateOrganizationResponse);

  // Get Kafka consumer group lag information
  rpc GetConsumerLag(GetConsumerLagRequest) returns (GetConsumerLagResponse);
}

message PingRequest {
  string message = 1;
}

message PingResponse {
  string message = 1;
  int64 timestamp = 2;
  string server_id = 3;
}


message InQueueStatusRequest {
  // Empty for now, can be extended
}

message InQueueStatusResponse {
  repeated InQueueItem items = 1;
}

message InQueueItem {
  int64 count = 1;
  string telemetry_type = 2;
}

message Organization {
  string id = 1;
  string name = 2;
  bool enabled = 3;
}

message ListOrganizationsRequest {}

message ListOrganizationsResponse {
  repeated Organization organizations = 1;
}

message CreateOrganizationRequest {
  string name = 1;
  bool enabled = 2;
}

message CreateOrganizationResponse {
  Organization organization = 1;
}

message UpdateOrganizationRequest {
  string id = 1;
  google.protobuf.StringValue name = 2;
  google.protobuf.BoolValue enabled = 3;
}

message UpdateOrganizationResponse {
  Organization organization = 1;
}

message GetConsumerLagRequest {
  string group_filter = 1;
  string topic_filter = 2;
}

message GetConsumerLagResponse {
  repeated ConsumerPartitionLag lags = 1;
}

message ConsumerPartitionLag {
  string topic = 1;
  int32 partition = 2;
  int64 current_offset = 3;
  int64 high_water_mark = 4;
  int64 lag = 5;
  string consumer_group = 6;
}
