---
config:
  look: handDrawn
  theme: neutral
  flowchart:
    curve: basis
---
flowchart TB
    classDef external fill:#eee,stroke:#333,color:#000,font-weight:bold,stroke-width:2px
    classDef pod fill:#ddf,stroke:#333,color:#000,font-weight:bold,stroke-width:2px
    classDef db fill:#bfb,stroke:#333,color:#000,font-weight:bold,stroke-width:2px
    classDef blob fill:#fc9,stroke:#333,color:#000,font-weight:bold,stroke-width:2px
    classDef blank stroke-width:0

    raw_s3(("raw file")):::blob@{ shape: lin-cyl, label:"S3: raw" }
    cooked_s3(("cooked parquet")):::blob@{ shape: lin-cyl, label:"S3: cooked" }

    inqueue:::db@{ shape: cylinder, label: "ingestion queue" }
    work_queue:::db@{ shape: cyl, label: "work queue"}

    segment_tables:::db@{ shape: cyl, label: "segment index"}

    subgraph Notifications
        sqs["AWS SQS"]
        webhook["HTTP Webhook"]
        inqueue_journal[("journal")]:::db
        inqueue_journal <-->|de-duplication| pubsub
        pubsub["PubSub Handler"]:::pod
        webhook --> pubsub
        sqs --> pubsub
        class sqs,webhook external;
    end

    pubsub --> inqueue


    subgraph Ingestion
        direction TB
        subgraph IA[ ]
            chq_metrics["chq-metrics parquet"]:::pod
        chq_logs["chq-logs parquet"]:::pod
        end
        subgraph IB[ ]
            raw_parquet["raw parquet logs"]:::pod
            raw_otel["raw otel"]:::pod
        end
        class IA,IB blank
    end

    raw_s3 ==> Ingestion
    inqueue --> Ingestion ==> cooked_s3
    Ingestion --> segment_tables
    Ingestion --> work_queue

    subgraph Processing
        direction TB
        subgraph PA[ ]
            rollup_metrics["rollup metrics"]:::pod
            compact_metrics["compact metrics"]:::pod
        end
        subgraph PB [ ]
            compact_logs["compact logs"]:::pod
            sweeper["sweeper (cleanup)"]:::pod
        end
        class PA,PB blank
    end

    cooked_s3 <==> Processing
    Processing <--> segment_tables
    Processing <--> work_queue

    subgraph Query
        query_worker["query worker"]:::pod
        query_api["query API"]:::pod
        query_api --> query_worker
    end
    segment_tables --> Query
    cooked_s3 ==> query_worker

    queries(["queries"]):::external
    queries --> query_api
